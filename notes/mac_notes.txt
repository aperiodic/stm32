
Wed 01 May 2013 10:49:02 (PDT)

Experiments with writing to PHY chip on Olimex E407 board.

In Chibios in the stm32/mac_lld.c file
    in the mac_lld_init function:

Added these lines as experiments to change settings

    uint32_t bmcr_val;
  uint32_t phyctl_1f;

  bmcr_val = mii_read(&ETHD1, MII_BMCR);

  mii_write(&ETHD1, MII_BMCR, (bmcr_val & ~(BMCR_ANENABLE)) );

  bmcr_val = mii_read(&ETHD1, MII_BMCR);

  mii_write(&ETHD1, MII_BMCR, bmcr_val |  BMCR_FULLDPLX | BMCR_SPEED100);

  phyctl_1f = mii_read(&ETHD1, 0x1f);

  mii_write(&ETHD1, 0x1f, (phyctl_1f | 1<<13) );

Some settings were overwritten elsewhere.



So in the cmddetail.c file in one of the
source directories, added a new shell function 'phy'


void cmd_phy(BaseSequentialStream *chp, int argc, char *argv[]) {
    uint32_t phy_q = 0;
    uint32_t reg_to_ping = 0;
    //uint32_t bmcr_val = 0;

    if (argc > 1) {
        chprintf(chp, "Usage: phy reg\r\n");
        return;
    }


//      bmcr_val = mii_read(&ETHD1, MII_BMCR);
//
//      mii_write(&ETHD1, MII_BMCR, (bmcr_val & ~(1<<12)) );
//
//      bmcr_val = mii_read(&ETHD1, MII_BMCR);
//
//      mii_write(&ETHD1, 0x1f,( bmcr_val | 1<<13));

    reg_to_ping = atoi(argv[0]);
    phy_q = mii_read(&ETHD1, reg_to_ping);
    chprintf(chp, "phy reg 0x%x: 0x%x\n\r", reg_to_ping, phy_q);

}


this allowed us to query the state of registers in the PHY chip and
also to add routines to set registers.



